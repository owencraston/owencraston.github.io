{"version":3,"file":"component---src-pages-blog-js-61d0a52144dd8fed8937.js","mappings":"8OA6FA,UAnFkB,SAAC,GAAc,IACzBA,EADwB,EAAXC,KACAC,kBAAkBC,MAErC,OACE,gCACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,mBACX,gBAAC,KAAD,KACE,gBAAC,KAAD,KAEE,gBAAC,KAAD,iBAGA,gBAAC,KAAD,KACE,gBAAC,KAAD,kLAGA,gBAAC,IAAD,OAGF,gBAAC,KAAD,CAAiBC,UAAU,WACtBL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACRH,EAAQG,EAAKC,YAAYJ,OAASG,EAAKE,OAAOC,KACpD,OACE,gBAAC,KAAD,CAAUC,IAAKJ,EAAKE,OAAOC,MACzB,uBAAKL,UAAU,SACb,uBAAKA,UAAU,iBACb,gBAAC,EAAAO,KAAD,CAAMC,GAAIN,EAAKE,OAAOC,MACpB,gBAAC,IAAD,CAAKI,MAAOP,EAAKC,YAAYO,MAAMC,gBAAgBF,MAAOV,MAAM,iBAGpE,gBAAC,KAAD,uBAEE,gBAAC,KAAD,CAAWa,KAAMV,EAAKC,YAAYU,YAAaC,OAAO,SAASf,MAAM,gBAClEG,EAAKC,YAAYU,eAKxB,uBAAKb,UAAU,WACb,8BACE,gBAAC,KAAD,KACE,wBAAMA,UAAU,gBAAgBE,EAAKC,YAAYY,WAAWd,KAAI,SAACe,EAAMC,GAAP,OAC9D,gBAAC,EAAAV,KAAD,CAAMC,GAAE,IAAMU,GAAAA,CAAUF,GAASV,IAAKW,GACpC,wBAAMjB,UAAU,4CAAhB,IAA6DgB,GAC5Dd,EAAKC,YAAYY,WAAWI,SAAWF,EAAQ,EAAI,wBAAMjB,UAAU,6BAAhB,OAAyD,OAHjH,MAOF,gBAAC,KAAD,KACE,gBAAC,EAAAO,KAAD,CAAMP,UAAU,eAAeoB,MAAO,CAAEC,UAAU,QAAWb,GAAIN,EAAKE,OAAOC,MAC1EN,IAGL,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAUC,UAAU,4BAA4BsB,MAAM,KAAKC,OAAO,OAClE,wBAAMvB,UAAU,gBAAhB,qBAAkDE,EAAKC,YAAYqB,KAAnE,MAEF,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAOxB,UAAU,4BAA4BsB,MAAM,KAAKC,OAAO,OAC/D,wBAAMvB,UAAU,gBAAhB,gBAA6CE,EAAKC,YAAYsB,KAA9D,OAGJ,gBAAC,KAAD,CACEC,wBAAyB,CACvBC,OAAQzB,EAAKC,YAAYyB,aAAe1B,EAAK2B,WAGjD,gBAAC,EAAAtB,KAAD,CAAMC,GAAIN,EAAKE,OAAOC,MACpB,gBAAC,KAAD,CAAUL,UAAU,cAApB","sources":["webpack://gatsby-portfolio/./src/pages/blog.js"],"sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { Calendar, Clock } from 'react-feather'\r\nimport Img from \"gatsby-image\"\r\nimport {ContainerLayout, WorkPost, Intro, SubTitle, Title, Text, HeaderIntro, SubText, SmallText, UnderLink, ReadMore} from \"../components/common\"\r\nimport CategoriesTags from '../components/CategoriesTags/categoriesTags';\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nconst BlogIndex = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges\r\n  \r\n  return (\r\n    <>\r\n      <Layout> \r\n        <SEO title=\"Blog Home Page\" />\r\n        <Intro>\r\n          <ContainerLayout>\r\n\r\n            <SubTitle>\r\n              Articles\r\n            </SubTitle>\r\n            <HeaderIntro>\r\n              <SubText>\r\n                Articles on software engineering, focused on Android, IOS, React Native and everything in between, with practical tips from real projects and my own personal experience.\r\n              </SubText>\r\n              <CategoriesTags /> \r\n            </HeaderIntro>\r\n\r\n            <ContainerLayout className=\"wrapper\">\r\n                {posts.map(({ node }) => {\r\n                const title = node.frontmatter.title || node.fields.slug\r\n                return (\r\n                  <WorkPost key={node.fields.slug}>\r\n                    <div className=\"media\">\r\n                      <div className=\"image-wrapper\">\r\n                        <Link to={node.fields.slug}>\r\n                          <Img fluid={node.frontmatter.image.childImageSharp.fluid} title=\"work title\" />\r\n                        </Link> \r\n                      </div>\r\n                      <SmallText>\r\n                        Image Credits : \r\n                        <UnderLink href={node.frontmatter.imageCredit} target=\"_blank\" title=\"image credit\">\r\n                          {node.frontmatter.imageCredit}\r\n                        </UnderLink>\r\n                      </SmallText>\r\n                    </div>\r\n                    \r\n                    <div className=\"content\">\r\n                      <header>\r\n                        <SmallText> \r\n                          <span className=\"align-middle\">{node.frontmatter.categories.map((item, index) => (\r\n                            <Link to={`/${kebabCase(item)}`} key={index}>\r\n                              <span className=\"align-middle text-primary text-underline\">#{item}</span>\r\n                              {node.frontmatter.categories.length !== index + 1 ? <span className=\"align-middle text-primary\"> , </span> : \"\"}\r\n                            </Link>\r\n                          ))} </span>\r\n                        </SmallText>\r\n                        <Title>\r\n                          <Link className=\"text-primary\" style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                            {title}\r\n                          </Link>\r\n                        </Title>\r\n                        <SmallText> \r\n                          <Calendar className=\"align-middle text-primary\" width=\"18\" height=\"18\" /> \r\n                          <span className=\"align-middle\"> date published : {node.frontmatter.date} </span>\r\n                        </SmallText>\r\n                        <SmallText> \r\n                          <Clock className=\"align-middle text-primary\" width=\"18\" height=\"18\" /> \r\n                          <span className=\"align-middle\"> read time : {node.frontmatter.time} </span>\r\n                        </SmallText>\r\n                      </header>\r\n                      <Text\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: node.frontmatter.description || node.excerpt,\r\n                        }}\r\n                      />\r\n                      <Link to={node.fields.slug}>\r\n                        <ReadMore className=\"lined-link\"> read more &#8594; </ReadMore>\r\n                      </Link>\r\n                    </div>\r\n                  </WorkPost>\r\n                )\r\n              })}\r\n            </ContainerLayout>\r\n          </ContainerLayout>\r\n        </Intro>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/(blog)/\"}}, sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            time\r\n            title\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600, quality: 100) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            categories\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["posts","data","allMarkdownRemark","edges","title","className","map","node","frontmatter","fields","slug","key","Link","to","fluid","image","childImageSharp","href","imageCredit","target","categories","item","index","kebabCase","length","style","boxShadow","width","height","date","time","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}